{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\MERN\\\\Project\\\\New\\\\E-SurveyWithPhone\\\\E-SurveyWithPhoneAuth\\\\Survey\\\\E-Survey\\\\front-end\\\\src\\\\components\\\\Response\\\\SurveyResponseList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyResponseList = () => {\n  _s();\n  const [responses, setResponses] = useState([]);\n  useEffect(() => {\n    async function fetchResponses() {\n      try {\n        const response = await fetch('/api/form/getSurveyResponses');\n        if (response.status === 200) {\n          const data = await response.json();\n          setResponses(data.data);\n        } else {\n          console.error('Failed to fetch responses');\n        }\n      } catch (error) {\n        console.error('Fetch responses error:', error);\n      }\n    }\n    fetchResponses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ResponseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Response List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), responses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No responses available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: responses.map(response => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Survey Title: \", response.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Respondent Name: \", response.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Respondent Email: \", response.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Respondent Phone Number: \", response.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Response Date: \", response.createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Questions and Responses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: response.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Question: \", question.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Response: \", question.response]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)]\n          }, questionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, response._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyResponseList, \"fiN9WW5l8xSd11IHrn6onE96d44=\");\n_c = SurveyResponseList;\nexport default SurveyResponseList;\nvar _c;\n$RefreshReg$(_c, \"SurveyResponseList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SurveyResponseList","_s","responses","setResponses","fetchResponses","response","fetch","status","data","json","console","error","class","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","name","email","phoneNumber","createdAt","questions","question","questionIndex","text","_id","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/MERN/Project/New/E-SurveyWithPhone/E-SurveyWithPhoneAuth/Survey/E-Survey/front-end/src/components/Response/SurveyResponseList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './'\r\nconst SurveyResponseList = () => {\r\n  const [responses, setResponses] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    async function fetchResponses() {\r\n      try {\r\n        const response = await fetch('/api/form/getSurveyResponses');\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          setResponses(data.data);\r\n        } else {\r\n          console.error('Failed to fetch responses');\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch responses error:', error);\r\n      }\r\n    }\r\n\r\n    fetchResponses();\r\n  }, []);\r\n\r\n  return (\r\n    <div class=\"ResponseList\">\r\n      <h2>Response List</h2>\r\n      {responses.length === 0 ? (\r\n        <p>No responses available.</p>\r\n      ) : (\r\n        <ul>\r\n          {responses.map((response) => (\r\n            <li key={response._id}>\r\n              <h3>Survey Title: {response.title}</h3>\r\n              <p>Respondent Name: {response.name}</p>\r\n              <p>Respondent Email: {response.email}</p>\r\n              <p>Respondent Phone Number: {response.phoneNumber}</p>\r\n              <p>Response Date: {response.createdAt}</p>\r\n              <h4>Questions and Responses:</h4>\r\n              <ul>\r\n                {response.questions.map((question, questionIndex) => (\r\n                  <li key={questionIndex}>\r\n                    <p>Question: {question.text}</p>\r\n                    <p>Response: {question.response}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyResponseList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}