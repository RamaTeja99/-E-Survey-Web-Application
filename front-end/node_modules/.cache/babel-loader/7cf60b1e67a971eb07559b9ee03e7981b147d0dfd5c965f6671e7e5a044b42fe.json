{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\MERN\\\\Project\\\\New\\\\E-SurveyWithPhone\\\\E-SurveyWithPhoneAuth\\\\Survey\\\\E-Survey\\\\front-end\\\\src\\\\components\\\\PhoneAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport firebase from './firebaese.js'; // Import firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhoneAuth = () => {\n  _s();\n  const defaultCountryCode = '+91';\n  const history = useHistory();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [error, setError] = useState(null);\n  const [verificationCode, setVerificationCode] = useState('');\n  const [confirmResult, setConfirmResult] = useState(null);\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      'size': 'invisible',\n      'callback': response => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // handleSendCode(); // Do not call handleSendCode here\n      }\n    });\n  }, []);\n  const handleSendCode = () => {\n    const formattedPhoneNumber = `${defaultCountryCode}${phoneNumber}`;\n    const appVerifier = window.recaptchaVerifier;\n    firebase.auth().signInWithPhoneNumber(formattedPhoneNumber, appVerifier).then(confirmationResult => {\n      setConfirmResult(confirmationResult);\n    }).catch(error => {\n      console.log(error);\n      setError('Something went wrong');\n    });\n  };\n  const handleVerifyCode = e => {\n    e.preventDefault();\n\n    // Call handleSendCode function to send verification code\n    handleSendCode();\n    if (confirmResult) {\n      confirmResult.confirm(verificationCode).then(result => {\n        // User signed in successfully.\n        const user = result.user;\n        console.log(user);\n\n        // Call your API\n        fetch(`http://localhost:8080/form/getPhoneUserForLogin?phoneNumber=${phoneNumber}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          if (response.status === 404) {\n            alert('No user found. Please register.');\n            // Navigate to register page\n            history.push('/register');\n          } else if (response.status === 200) {\n            // Navigate to dashboard page\n            alert('Login successfully');\n            history.push('/dashboard');\n          }\n        }).catch(error => {\n          // Handle the error\n          console.error('Error:', error);\n        });\n      }).catch(error => {\n        setError('Invalid code');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        border: '1px solid black',\n        padding: '20px'\n      },\n      onSubmit: handleVerifyCode,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phone Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: '10px 0',\n          padding: '10px',\n          width: '200px'\n        },\n        placeholder: \"Phone Number\",\n        type: \"tel\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), confirmResult && /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: '10px 0',\n          padding: '10px',\n          width: '200px'\n        },\n        placeholder: \"Verification code\",\n        type: \"number\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: '10px 20px',\n          margin: '10px 0',\n          cursor: 'pointer'\n        },\n        type: \"submit\",\n        children: confirmResult ? 'Verify Code' : 'Send Code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(PhoneAuth, \"dZRmnH7vhsEJH/+JjaBNEu5suVI=\", false, function () {\n  return [useHistory];\n});\n_c = PhoneAuth;\nexport default PhoneAuth;\nvar _c;\n$RefreshReg$(_c, \"PhoneAuth\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","firebase","jsxDEV","_jsxDEV","PhoneAuth","_s","defaultCountryCode","history","phoneNumber","setPhoneNumber","error","setError","verificationCode","setVerificationCode","confirmResult","setConfirmResult","window","recaptchaVerifier","auth","RecaptchaVerifier","response","handleSendCode","formattedPhoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","console","log","handleVerifyCode","e","preventDefault","confirm","result","user","fetch","method","headers","status","alert","push","style","display","justifyContent","alignItems","height","children","flexDirection","border","padding","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","margin","width","placeholder","type","value","onChange","target","cursor","color","marginTop","to","id","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/MERN/Project/New/E-SurveyWithPhone/E-SurveyWithPhoneAuth/Survey/E-Survey/front-end/src/components/PhoneAuth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport firebase from './firebaese.js'; // Import firebase\r\n\r\nconst PhoneAuth = () => {\r\n    const defaultCountryCode = '+91';\r\n    const history = useHistory();\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [verificationCode, setVerificationCode] = useState('');\r\n    const [confirmResult, setConfirmResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\r\n            'size': 'invisible',\r\n            'callback': (response) => {\r\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n                // handleSendCode(); // Do not call handleSendCode here\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleSendCode = () => {\r\n        const formattedPhoneNumber = `${defaultCountryCode}${phoneNumber}`;\r\n        const appVerifier = window.recaptchaVerifier;\r\n        firebase.auth().signInWithPhoneNumber(formattedPhoneNumber, appVerifier)\r\n            .then((confirmationResult) => {\r\n                setConfirmResult(confirmationResult);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setError('Something went wrong');\r\n            });\r\n    };\r\n\r\n    const handleVerifyCode = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Call handleSendCode function to send verification code\r\n        handleSendCode();\r\n\r\n        if (confirmResult) {\r\n\r\n            confirmResult.confirm(verificationCode)\r\n                .then((result) => {\r\n                    // User signed in successfully.\r\n                    const user = result.user;\r\n                    console.log(user);\r\n\r\n                    // Call your API\r\n                    fetch(`http://localhost:8080/form/getPhoneUserForLogin?phoneNumber=${phoneNumber}`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    })\r\n                        .then(response => {\r\n                            if (response.status === 404) {\r\n                                alert('No user found. Please register.');\r\n                                // Navigate to register page\r\n                                history.push('/register');\r\n                            } else if (response.status === 200) {\r\n                                // Navigate to dashboard page\r\n                                alert('Login successfully');\r\n                                history.push('/dashboard');\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            // Handle the error\r\n                            console.error('Error:', error);\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    setError('Invalid code');\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n            <form style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', border: '1px solid black', padding: '20px' }} onSubmit={handleVerifyCode}>\r\n                <h2>Phone Authentication</h2>\r\n                <input\r\n                    style={{ margin: '10px 0', padding: '10px', width: '200px' }}\r\n                    placeholder=\"Phone Number\"\r\n                    type=\"tel\"\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                />\r\n                {confirmResult && (\r\n                    <input\r\n                        style={{ margin: '10px 0', padding: '10px', width: '200px' }}\r\n                        placeholder=\"Verification code\"\r\n                        type=\"number\"\r\n                        value={verificationCode}\r\n                        onChange={(e) => setVerificationCode(e.target.value)}\r\n                    />\r\n                )}\r\n                <button\r\n                    style={{ padding: '10px 20px', margin: '10px 0', cursor: 'pointer' }}\r\n                    type=\"submit\"\r\n                >\r\n                    {confirmResult ? 'Verify Code' : 'Send Code'}\r\n                </button>\r\n                {error && <div style={{ color: 'red' }}>{error}</div>}\r\n                <div style={{ marginTop: '10px' }}>\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                <div id=\"recaptcha-container\"></div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhoneAuth;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}