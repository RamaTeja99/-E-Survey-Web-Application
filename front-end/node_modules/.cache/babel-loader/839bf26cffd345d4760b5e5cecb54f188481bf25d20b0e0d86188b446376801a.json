{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\MERN\\\\Project\\\\New\\\\E-SurveyWithPhone\\\\E-SurveyWithPhoneAuth\\\\Survey\\\\E-Survey\\\\front-end\\\\src\\\\components\\\\Survey\\\\SurveyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyList = () => {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  useEffect(() => {\n    async function fetchSurveys() {\n      try {\n        const response = await fetch('/api/form/getForm');\n        if (response.status === 201) {\n          const data = await response.json();\n          setSurveys(data.data);\n        } else {\n          console.error('Failed to fetch surveys');\n        }\n      } catch (error) {\n        console.error('Fetch surveys error:', error);\n      }\n    }\n    fetchSurveys();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Survey List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), surveys.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No surveys available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: survey.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: survey.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Unique Link: \", survey.uniqueLink]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, survey._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyList, \"MQRvZjfMbqbx3vRgTHx6s1eVAEA=\");\n_c = SurveyList;\nexport default SurveyList;\nvar _c;\n$RefreshReg$(_c, \"SurveyList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SurveyList","_s","surveys","setSurveys","fetchSurveys","response","fetch","status","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","survey","title","description","uniqueLink","_id","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/MERN/Project/New/E-SurveyWithPhone/E-SurveyWithPhoneAuth/Survey/E-Survey/front-end/src/components/Survey/SurveyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SurveyList = () => {\r\n  const [surveys, setSurveys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchSurveys() {\r\n      try {\r\n        const response = await fetch('/api/form/getForm');\r\n        if (response.status === 201) {\r\n          const data = await response.json();\r\n          setSurveys(data.data);\r\n        } else {\r\n          console.error('Failed to fetch surveys');\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch surveys error:', error);\r\n      }\r\n    }\r\n\r\n    fetchSurveys();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Survey List</h2>\r\n      {surveys.length === 0 ? (\r\n        <p>No surveys available.</p>\r\n      ) : (\r\n        <ul>\r\n          {surveys.map((survey) => (\r\n            <li key={survey._id}>\r\n              <h3>{survey.title}</h3>\r\n              <p>{survey.description}</p>\r\n              <p>Unique Link: {survey.uniqueLink}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,eAAeO,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;QACjD,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,UAAU,CAACK,IAAI,CAACA,IAAI,CAAC;QACvB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IAEAP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBd,OAAO,CAACe,MAAM,KAAK,CAAC,gBACnBlB,OAAA;MAAAa,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5BjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAClBpB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKO,MAAM,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBjB,OAAA;UAAAa,QAAA,EAAIO,MAAM,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BjB,OAAA;UAAAa,QAAA,GAAG,eAAa,EAACO,MAAM,CAACG,UAAU;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHhCG,MAAM,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAvCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}