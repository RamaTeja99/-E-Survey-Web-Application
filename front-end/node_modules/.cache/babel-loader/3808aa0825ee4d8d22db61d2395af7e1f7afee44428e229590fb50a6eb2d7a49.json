{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\MERN\\\\Project\\\\New\\\\E-SurveyWithPhone\\\\E-SurveyWithPhoneAuth\\\\Survey\\\\E-Survey\\\\front-end\\\\src\\\\components\\\\SurveySubmissionPage.js\",\n  _s2 = $RefreshSig$();\n// SurveySubmissionPage.js \n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport './SurveySubmissionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveySubmissionPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    formId\n  } = useParams(); // Extract the formId from the URL parameters\n  const [survey, setSurvey] = useState(null);\n  useEffect(() => {\n    // Fetch survey data when the component mounts\n    fetchSurveyData();\n  }, []);\n  const fetchSurveyData = async () => {\n    try {\n      // Fetch the survey data based on the formId\n      const response = await axios.get(`http://localhost:8080/form/getSurveyData/${formId}`);\n      const surveyData = response.data.data;\n      setSurvey(surveyData);\n    } catch (error) {\n      console.error('Error fetching survey data:', error);\n    }\n  };\n  const SubmitSurveyForm = ({\n    formId,\n    questions\n  }) => {\n    _s();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [responses, setResponses] = useState(Array(questions.length).fill(''));\n    const handleSubmit = async event => {\n      event.preventDefault();\n      try {\n        const response = {\n          formId,\n          name,\n          email,\n          answers: responses\n        };\n\n        // Send the response data to the server\n        const submitResponse = await axios.post('http://localhost:8080/form/submitResponse', response);\n\n        // Handle success or error as needed\n        console.log('Response submitted:', submitResponse.data);\n      } catch (error) {\n        console.error('Error submitting response:', error);\n      }\n    };\n    const handleResponseChange = (questionIndex, event) => {\n      const updatedResponses = [...responses];\n      updatedResponses[questionIndex] = event.target.value;\n      setResponses(updatedResponses);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Question \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), question.type === 'text' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: responses[index] || '',\n            onChange: event => handleResponseChange(index, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: responses[index] || '',\n            onChange: event => handleResponseChange(index, event),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, optionIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SubmitSurveyForm, \"xrtdITT9Pf5ovZlcFh3365oWa2c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Submission\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Survey Submission Page for Form ID: \", formId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      className: \"back-button\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), survey ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: survey.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: survey.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SubmitSurveyForm, {\n        formId: formId,\n        questions: survey.questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading survey data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(SurveySubmissionPage, \"a48FTjJPS2uBCgRvNDRaSi5T+Q4=\", false, function () {\n  return [useParams];\n});\n_c = SurveySubmissionPage;\nexport default SurveySubmissionPage;\nvar _c;\n$RefreshReg$(_c, \"SurveySubmissionPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Link","jsxDEV","_jsxDEV","SurveySubmissionPage","_s2","_s","$RefreshSig$","formId","survey","setSurvey","fetchSurveyData","response","get","surveyData","data","error","console","SubmitSurveyForm","questions","name","setName","email","setEmail","responses","setResponses","Array","length","fill","handleSubmit","event","preventDefault","answers","submitResponse","post","log","handleResponseChange","questionIndex","updatedResponses","target","value","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","map","question","index","text","options","option","optionIndex","className","to","title","description","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/MERN/Project/New/E-SurveyWithPhone/E-SurveyWithPhoneAuth/Survey/E-Survey/front-end/src/components/SurveySubmissionPage.js"],"sourcesContent":["// SurveySubmissionPage.js \r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams ,Link} from 'react-router-dom';\r\nimport './SurveySubmissionPage.css'\r\n\r\nconst SurveySubmissionPage = () => {\r\n  const { formId } = useParams(); // Extract the formId from the URL parameters\r\n  const [survey, setSurvey] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch survey data when the component mounts\r\n    fetchSurveyData();\r\n  }, []);\r\n\r\n  const fetchSurveyData = async () => {\r\n    try {\r\n      // Fetch the survey data based on the formId\r\n      const response = await axios.get(`http://localhost:8080/form/getSurveyData/${formId}`);\r\n      const surveyData = response.data.data;\r\n      setSurvey(surveyData);\r\n    } catch (error) {\r\n      console.error('Error fetching survey data:', error);\r\n    }\r\n  };\r\n\r\n  const SubmitSurveyForm = ({ formId, questions }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [responses, setResponses] = useState(Array(questions.length).fill(''));\r\n\r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        const response = {\r\n          formId,\r\n          name,\r\n          email,\r\n          answers: responses,\r\n        };\r\n\r\n        // Send the response data to the server\r\n        const submitResponse = await axios.post('http://localhost:8080/form/submitResponse', response);\r\n\r\n        // Handle success or error as needed\r\n        console.log('Response submitted:', submitResponse.data);\r\n      } catch (error) {\r\n        console.error('Error submitting response:', error);\r\n      }\r\n    };\r\n\r\n    const handleResponseChange = (questionIndex, event) => {\r\n      const updatedResponses = [...responses];\r\n      updatedResponses[questionIndex] = event.target.value;\r\n      setResponses(updatedResponses);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Name:</label>\r\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n\r\n          <label>Email:</label>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\r\n          {questions.map((question, index) => (\r\n            <div key={index}>\r\n              <label>Question {index + 1}:</label>\r\n              <p>{question.text}</p>\r\n              {question.type === 'text' ? (\r\n                <input\r\n                  type=\"text\"\r\n                  value={responses[index] || ''}\r\n                  onChange={(event) => handleResponseChange(index, event)}\r\n                />\r\n              ) : (\r\n                <select\r\n                  value={responses[index] || ''}\r\n                  onChange={(event) => handleResponseChange(index, event)}\r\n                >\r\n                  <option value=\"\">Select an option</option>\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <option key={optionIndex} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          <button type=\"submit\">Submit Response</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='Submission'>\r\n      <h2>Survey Submission Page for Form ID: {formId}</h2>\r\n      <Link to=\"/dashboard\" className=\"back-button\">Back to Dashboard</Link> \r\n      {survey ? (\r\n        <div>\r\n          <h3>{survey.title}</h3>\r\n          <p>{survey.description}</p>\r\n          <SubmitSurveyForm formId={formId} questions={survey.questions} />\r\n        </div>\r\n      ) : (\r\n        <p>Loading survey data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveySubmissionPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}